    declare a double;
    declare ee double;
    declare lng double;
    declare lat double;
    declare x double;
    declare y double;
    declare ret1 double;
    declare ret2 double;
    declare ret3 double;
    declare ret4 double;
    declare dlat double;
    declare ret5 double;
    declare ret6 double;
    declare ret7 double;
    declare ret8 double;
    declare dlng double;

    declare radLat double;
    declare magic1 double;
    declare magic double;
    declare sqrtMagic double;
    declare dlatres double;
    declare dlngres double;
    declare mgLat double;
    declare mgLng double;

    declare nt double;
    declare nv double;

	set a = 6378245.0;
    set ee = 0.00669342162296594323;
    set lng = convert(new.neckletlongitude,decimal(15,10));
    set lat = convert(new.neckletvdoing,decimal(15,10));
    set x = lng -105.0;
    set y = lat -35.0;
    set ret1 = -100.0 + 2.0*x + 3.0*y +0.2*y*y + 0.1*x*y + 0.2*sqrt(abs(x));
    set ret2 = ret1 + (20.0 * sin(6.0 * x * 3.1415926535898) + 20.0 * sin(2.0 * x * 3.1415926535898)) * 2.0 / 3.0;
    set ret3 = ret2 + (20.0 * sin(y * 3.1415926535898) + 40.0 * sin(y / 3.0 * 3.1415926535898)) * 2.0 / 3.0;
    set ret4 = ret3 + (160.0 * sin(y / 12.0 * 3.1415926535898) + 320 * sin(y * 3.1415926535898 / 30.0)) * 2.0 / 3.0;
    set dlat = ret4;

    set ret5 = 300.0 + x + 2.0 * y + 0.1 * x * x + 0.1 * x * y + 0.1 * sqrt(abs(x));
    set ret6 = ret5 + (20.0 * sin(6.0 * x * 3.1415926535898) + 20.0 * sin(2.0 * x * 3.1415926535898)) * 2.0 / 3.0;
    set ret7 = ret6 + (20.0 * sin(x * 3.1415926535898) + 40.0 * sin(x / 3.0 * 3.1415926535898)) * 2.0 / 3.0;
    set ret8 = ret7 + (150.0 * sin(x / 12.0 * 3.1415926535898) + 300.0 * sin(x / 30.0 * 3.1415926535898)) * 2.0 / 3.0;
    set dlng = ret8;

    set radLat = lat/180.0*3.1415926535898;

    set magic1 = sin(radLat);
    set magic = 1 - ee * magic1 * magic1;

    set sqrtMagic = sqrt(magic);

    set dlatres = (dlat * 180.0) / ((a * (1 - ee)) / (magic * sqrtMagic) * 3.1415926535898);
    set dlngres = (dlng * 180.0) / (a / sqrtMagic * cos(radLat) * 3.1415926535898);

    set mgLng = lng + dlngres;
    set mgLat = lat + dlatres;


    ############################多表联查#############################
    <select id="getListByConfirm" parameterType="int" resultMap="ResultMap2">
      select * from pmt_schedule_calss_list WHERE confirm=#{confirm}
    </select>
    <!-- 使用resultMap映射实体类和字段之间的一一对应关系 -->
    <resultMap type="com.sec.demo.pojo.pmt.PmtScheduleCalssList" id="ResultMap2">
      <id property="id" column="id"/>
      <result property="cid" column="cid"/>
      <result property="ctype" column="ctype"/>
      <result property="shiftstarttime" column="shiftstarttime"/>
      <result property="confirm" column="confirm"/>
      <association property="pmtScheduleClassNew" column="cid" select="getPmtScheduleClassNew2">
      </association>
    </resultMap>
    <select id="getPmtScheduleClassNew2" parameterType="string" resultType="com.sec.demo.pojo.pmt.PmtScheduleClassNew">
      SELECT cname FROM pmt_schedule_class_new WHERE cid=#{cid}
    </select>
    ##################################################################
